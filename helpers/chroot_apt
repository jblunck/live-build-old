#!/bin/sh

# lh_chroot_apt(1) - manage /etc/apt/apt.conf
# Copyright (C) 2006-2010 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

Chroot_apt ()
{
# Requiring stage file
Require_stagefile .stage/config .stage/bootstrap

case "${1}" in
	install|install-binary)
		Echo_message "Configuring file /etc/apt/apt.conf"

		# Checking stage file
		Check_stagefile .stage/chroot_apt

		mkdir -p chroot/etc/apt/apt.conf.d

		# Configuring apt ftp proxy
		if [ -n "${LH_APT_FTP_PROXY}" ]
		then
			echo "Acquire::ftp::Proxy \"${LH_APT_FTP_PROXY}\";" > chroot/etc/apt/apt.conf.d/00ftp-proxy
		fi

		# Configuring apt http proxy
		if [ -n "${LH_APT_HTTP_PROXY}" ]
		then
			echo "Acquire::http::Proxy \"${LH_APT_HTTP_PROXY}\";" > chroot/etc/apt/apt.conf.d/00http-proxy
		fi

		# Configuring apt pdiffs
		case "${LH_APT_PDIFFS}" in
			true)
				echo "Acquire::PDiffs \"true\";" > chroot/etc/apt/apt.conf.d/00pdiffs
				;;

			false)
				echo "Acquire::PDiffs \"false\";" > chroot/etc/apt/apt.conf.d/00pdiffs
				;;
		esac

		# Configuring apt pipeline
		if [ -n "${LH_APT_PIPELINE}" ]
		then
			echo "Acquire::http::Pipeline-Depth \"${LH_APT_PIPELINE}\";" > chroot/etc/apt/apt.conf.d/00pipeline
		fi

		# Configuring apt recommends
		case "${LH_APT_RECOMMENDS}" in
			true)
				echo "APT::Install-Recommends \"true\";" > chroot/etc/apt/apt.conf.d/00recommends
				echo "Aptitude::Recommends-Important \"true\";" >> chroot/etc/apt/apt.conf.d/00recommends
				;;

			false)
				echo "APT::Install-Recommends \"false\";" > chroot/etc/apt/apt.conf.d/00recommends
				echo "Aptitude::Recommends-Important \"false\";" >> chroot/etc/apt/apt.conf.d/00recommends
				;;
		esac

		# Configuring apt secure
		case "${LH_APT_SECURE}" in
			true)
				echo "APT::Get::AllowUnauthenticated \"false\";" > chroot/etc/apt/apt.conf.d/00secure
				echo "Aptitude::CmdLine::Ignore-Trust-Violations \"false\";" >> chroot/etc/apt/apt.conf.d/00secure
				;;

			false)
				echo "APT::Get::AllowUnauthenticated \"true\";" > chroot/etc/apt/apt.conf.d/00secure
				echo "Aptitude::CmdLine::Ignore-Trust-Violations \"true\";" >> chroot/etc/apt/apt.conf.d/00secure
				;;
		esac

		# Configuring apt config
		if [ -f config/chroot_apt/apt.conf ]
		then
			if [ -f chroot/etc/apt/apt.conf ]
			then
				mv chroot/etc/apt/apt.conf chroot/etc/apt/apt.conf.orig
			fi

			cp config/chroot_apt/apt.conf chroot/etc/apt/apt.conf
		fi

		# Configuring apt preferences
		if [ -f config/chroot_apt/preferences ]
		then
			if [ -f chroot/etc/apt/preferences ]
			then
				mv chroot/etc/apt/preferences chroot/etc/apt/preferences.orig
			fi

			cp config/chroot_apt/preferences chroot/etc/apt/preferences
		fi

		if Find_files config/chroot_local-packages/*.deb
		then
			echo >> chroot/etc/apt/preferences
			echo "# Added by lh_chroot_apt ${@}" >> chroot/etc/apt/preferences
			echo "Package: *" >> chroot/etc/apt/preferences
			echo "Pin: release o=chroot_local-packages" >> chroot/etc/apt/preferences

			case "${1}" in
				install)
					# Ensure local packages have priority
					echo "Pin-Priority: 1001" >> chroot/etc/apt/preferences
					;;

				install-binary)
					# Ensure local packages are not re-installed during lh_binary
					echo "Pin-Priority: 99" >> chroot/etc/apt/preferences

					echo >> chroot/etc/apt/preferences
					echo "Package: *" >> chroot/etc/apt/preferences
					echo "Pin: release o=debian" >> chroot/etc/apt/preferences
					echo "Pin-Priority: 99" >> chroot/etc/apt/preferences
					;;
			esac
		fi

		# Creating stage file
		Create_stagefile .stage/chroot_apt
		;;

	remove)
		Echo_message "Deconfiguring file /etc/apt/apt.conf"

		# Deconfiguring aptitude ftp proxy
		rm -f chroot/etc/apt/apt.conf.d/00ftp-proxy

		# Deconfiguring aptitude http proxy
		rm -f chroot/etc/apt/apt.conf.d/00http-proxy

		# Deconfiguring aptitude pdiffs
		if [ "${LH_APT_PDIFFS}" = "true" ]
		then
			rm -f chroot/etc/apt/apt.conf.d/00pdiffs
		fi

		# Deconfiguring aptitude pipeline
		rm -f chroot/etc/apt/apt.conf.d/00pipeline

		# Deconfiguring aptitude recommends
		if [ "${LH_APT_RECOMMENDS}" = "true" ]
		then
			rm -f chroot/etc/apt/apt.conf.d/00recommends
		fi

		# Deconfiguring aptitude secure
		if [ "${LH_APT_SECURE}" = "true" ]
		then
			rm -f chroot/etc/apt/apt.conf.d/00secure
		fi

		# Configuring apt config
		if [ -f config/chroot_apt/apt.conf ]
		then
			if [ -f chroot/etc/apt/apt.conf ]
			then
				mv chroot/etc/apt/apt.conf chroot/etc/apt/apt.conf.orig
			fi

			cp config/chroot_apt/apt.conf chroot/etc/apt/apt.conf

			if [ -f chroot/etc/apt/apt.conf.orig ]
			then
				mv chroot/etc/apt/apt.conf.orig chroot/etc/apt/apt.conf
			fi
		fi

		# Deconfiguring apt preferences
		if [ -f config/chroot_apt/preferences ]
		then
			if [ -f chroot/etc/apt/preferences ]
			then
				mv chroot/etc/apt/preferences chroot/etc/apt/preferences.orig
			fi

			cp config/chroot_apt/preferences chroot/etc/apt/preferences

			if [ -f chroot/etc/apt/preferences.orig ]
			then
				mv chroot/etc/apt/preferences.orig chroot/etc/apt/preferences
			fi
		fi

		if Find_files config/chroot_local-packages/*.deb
		then
			if [ -f chroot/etc/apt/preferences ]
			then
				# delete additions from lh_chroot_apt install|install-binary to preferences
				sed -i '/# Added by lh_chroot_apt/,$d' chroot/etc/apt/preferences
				# delete the last empty line
				sed -i '${/^[[:blank:]]*$/d;}' chroot/etc/apt/preferences
				# if the resulting preferences file is empty there was no user additions, remove it
				if [ ! -s chroot/etc/apt/preferences ]
				then
					rm -rf chroot/etc/apt/preferences
				fi
			fi

		fi

		# Removing stage file
		rm -f .stage/chroot_apt
		;;

	*)
		Usage
		;;
esac
}
