#!/bin/sh

# lh_bootstrap_debootstrap(1) - bootstrap a Debian system with debootstrap(8)
# Copyright (C) 2006-2010 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

Bootstrap_debootstrap ()
{
if [ "${LH_BOOTSTRAP}" != "debootstrap" ]
then
	return
fi

# Check architecture
Check_crossarchitecture

Echo_message "Begin bootstrapping system..."

Check_package /usr/sbin/debootstrap debootstrap

# Ensure that a system is built as root
Testroot

# Checking stage file
Check_stagefile .stage/bootstrap
Check_stagefile .stage/bootstrap_cache.restore

# Creating chroot directory
mkdir -p chroot

# Setting debootstrap options
if [ -n "${LH_ARCHITECTURE}" ]
then
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --arch ${LH_ARCHITECTURE}"
fi

if [ "${LH_ARCHIVE_AREAS}" != "main" ]
then
	# Modify archive areas to remove leading/trailing whitespaces and replace other whitepspace with commas
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --components $(echo ${LH_ARCHIVE_AREAS} | sed -e 's| |,|g')"
fi

if [ -n "${LH_BOOTSTRAP_CONFIG}" ]
then
	if [ -d "/usr/share/debootstrap/scripts/" ]
	then
		LH_DEBOOTSTRAP_SCRIPT="/usr/share/debootstrap/scripts/${LH_BOOTSTRAP_CONFIG}"
	else
		LH_DEBOOTSTRAP_SCRIPT="/usr/lib/debootstrap/scripts/${LH_BOOTSTRAP_CONFIG}"
	fi
fi

if [ -n "${LH_BOOTSTRAP_INCLUDE}" ]
then
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --include=$(echo ${LH_BOOTSTRAP_INCLUDE} | sed 's|  *|,|g')"
fi

if [ -n "${LH_BOOTSTRAP_EXCLUDE}" ]
then
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --exclude=$(echo ${LH_BOOTSTRAP_EXCLUDE} | sed 's|  *|,|g')"
fi

if [ "${LH_USE_FAKEROOT}" != "true" ]
then
	if [ -z "${LH_BOOTSTRAP_FLAVOUR}" ]
	then
		if In_list "stripped minimal" "${LH_PACKAGES_LISTS}"
		then
			DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --variant=minbase"
		fi
	else
		case "${LH_BOOTSTRAP_FLAVOUR}" in
			stripped|minimal)
				DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --variant=minbase"
				;;
			standard)
				;;

			*)
				DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --variant=${LH_BOOTSTRAP_FLAVOUR}"
		esac
	fi
else
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --variant=fakechroot"
fi

if [ "${_VERBOSE}" = "true" ]
then
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --verbose"
fi

if [ -x "/usr/sbin/debootstrap" ]
then
	if [ "${LH_CACHE_PACKAGES}" = "true" ]
	then
		if ls cache/packages_bootstrap/*.deb > /dev/null 2>&1
		then
			mkdir -p chroot/var/cache/apt/archives
			cp cache/packages_bootstrap/*.deb chroot/var/cache/apt/archives
		fi

		Echo_breakage "Running debootstrap (download-only)... "
		${LH_ROOT_COMMAND} debootstrap ${DEBOOTSTRAP_OPTIONS} --download-only "${LH_DISTRIBUTION}" chroot "${LH_MIRROR_BOOTSTRAP}" "${LH_DEBOOTSTRAP_SCRIPT}"

		if [ -n "${LH_ROOT_COMMAND}" ]
		then
			${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot
		fi

		# Removing old cache
		rm -f cache/packages_bootstrap/*.deb

		# Saving new cache
		mkdir -p cache/packages_bootstrap
		cp chroot/var/cache/apt/archives/*.deb cache/packages_bootstrap
	fi

	Echo_breakage "Running debootstrap... "
	${LH_ROOT_COMMAND} debootstrap ${DEBOOTSTRAP_OPTIONS} "${LH_DISTRIBUTION}" chroot "${LH_MIRROR_BOOTSTRAP}" "${LH_DEBOOTSTRAP_SCRIPT}"

	if [ -n "${LH_ROOT_COMMAND}" ]
	then
		${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot
	fi

	# Removing bootstrap cache
	rm -f chroot/var/cache/apt/archives/*.deb

	# Creating stage file
	Create_stagefile .stage/bootstrap
else
	Echo_error "Can't process file /usr/bin/debootstrap (FIXME)"
	exit 1
fi
}
